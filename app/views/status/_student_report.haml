#student_report
  - if @student.status == User::STATUS_ACTIVE
    %p= "Grade #{@student.district_grade}; #{User::STATUS_NAMES[@student.status].downcase} since #{dm(@student.date_active)}."
  - else
    %p= "Grade #{@student.district_grade}; #{User::STATUS_NAMES[@student.status].downcase}; was active from #{dm(@student.date_active)} to #{dm(@student.date_inactive)}"

  %table#report.tiny.fixed.padded
    %thead
      %tr
        %th.status_month Month
        %th.academic Academic
        %th.fte FTE
        %th.checkin SLP Met
        %th.note Notes
    %tbody
      - @coor_report[:months].each do |m|
        - status = @coor_report[:statuses][m]
        - current = @month==m
        - active = (current && @coor_report[:editable]  )
        - klass = cycle_stripes
        - id = nil
        - if current
          - klass << " current"
        - if status
          - notes = notes_for status, :notes_hash => @coor_report[:status_notes], :editable => true
          - if active
            - id = "status_#{status.id}"
          - else
            - fte = status.fte_hours
            - aca = Status::STATUS_NAMES[status.academic_status]
            - if status.held_periodic_checkins
              - meetings = 'Y'
            - else
              - meetings = 'N'
            - status_klass = status.unacceptable? ? 'u' : nil
        - elsif active
          - raise ArgumentError, "COOR status record for active month is missing."
        - elsif !@student.was_active?(m)
          - aca = fte = meetings = notes = '&ndash;'
        - elsif @this_month < m
          - aca = fte = meetings = notes = '&nbsp;'
        - else
          - aca = fte = meetings = notes = '?'
        %tr{:class=>klass, :id => id}
          %td.status_month= link_to_if((@coor_report[:editable] && !active), m.strftime('%b %Y'), coor_report_path(:id => @student, :m => m.to_s))
          - if active
            %td.academic= select_tag("status[academic_status]", aca_options(status.academic_status, true), :id => 'status_academic')
            %td.fte= text_field_tag("status[fte_hours]", status.fte_hours, :size => 5, :id => 'status_fte_hours')
            %td.checkin= check_box_tag("status[held_periodic_checkins]", 1, status.held_periodic_checkins?, :id => 'status_held_periodic_checkins')
          - else
            %td.academic{:class=>status_klass}= aca
            %td.fte= fte
            %td.checkin{:class=>status_klass}= meetings
          %td.notes= notes

  - if @coor_report[:enrollments].empty?
    %h2 No enrollments
  - else
    %h2 Enrollments
    - months = @coor_report[:months].sort
    %table.tiny.fixed.padded
      %thead
        %tr
          %th.class Class
          %th.status Status
          - @coor_report[:months].sort.each do |m|
            %th.month= m.strftime('%b')
      %tbody
        - @coor_report[:enrollments].each do |e|
          - statuses = @coor_report[:enrollment_statuses][e.id] || []
          - statuses.sort!{|x,y| x.month<=>y.month}
          %tr{:class=>cycle_stripes}
            %td.class
              .name
                = link_to e.contract_name, contract_report_path(:id => e)
              .facilitator
                = e.facilitator_name
                \/
                = e.term_name
              .credits
                = e.credit_string
              .notes= notes_for(@coor_report[:enrollment_notes][e.id], :editable => false)
            %td.status
              = e.status_description
            - months.each do |m|
              - if statuses.first.nil? || statuses.first.month != m
                %td.month &nbsp;
              - else
                - s = statuses.shift
                - status_klass = s.unacceptable? ? 'u' : nil
                %td.month
                  - report = [Status::STATUS_NAMES[s.academic_status][0..0], Status::STATUS_NAMES[s.attendance_status][0..0], s.met_fte_requirements ? 'A' : 'U']
                  - unless @coor_report[:enrollment_status_notes][s.id].blank?
                    %a.notes{:href=>'#', :class=>status_klass}= report.join(' ')
                    = notes_for(@coor_report[:enrollment_status_notes][s.id], :editable => false, :class=>'popup', :style => 'display: none')
                  - else
                    %span{:class=>status_klass}= report.join(' ')
