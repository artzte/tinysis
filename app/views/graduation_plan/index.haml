#graduation_worksheet{:class=>@report?'report':'worksheet'}
  %h1 
    = @student.full_name
    Graduation Plan
    = hidden_field_tag :student, @student.id
  %p
    - if @report
      - if @privs[:edit]
        = url_button "Return to worksheet", graduation_path(@student), :small => true
    - else
      = url_button "Manage placeholder credits", placeholder_credits_path(@student), :small => true
      = url_button "View print version", graduation_report_path(@student), :small => true

  #unassigned
    %h3 Unassigned Credits
    #credit_assignments= render :partial => 'unassigned', :collection => @unassigned_credits
  %h2 Credit Requirements
  #credit
    - @credit_requirements.each do |req|
      - next if req.parent_id
      .req.credit.parent{:id => "req_#{req.id}"}
        %h3
          .subtotal= @assigned[req.id][:subtotal]
          = req.name
        - unless req.notes.blank?
          .notes.textile=textilize(req.notes)
        .mappings
          - if @report && @assigned[req.id][:mappings].empty?
            No entries.
          = render :partial => 'mapping', :collection => @assigned[req.id][:mappings]
        - unless req.child_requirements.empty?
          - req.child_requirements.each do |child_req|
            .req.credit.child{:id => "req_#{child_req.id}"}
              %h4
                .subtotal= @assigned[child_req.id][:subtotal]
                = child_req.name
              - unless child_req.notes.blank?
                .notes.textile=textilize(child_req.notes)
              .mappings
                - if @report && @assigned[child_req.id][:mappings].empty?
                  No entries.
                = render :partial => 'mapping', :collection => @assigned[child_req.id][:mappings]

  - unless @general_requirements.empty?
    %h2 General Requirements
    #general.container
      - @general_requirements.each_with_index do |req,i|
        - klass=%w{req general}
        - klass << 'first' if i==0
        %div{:class=>klass.join(' '), :id => "req_#{req.id}"}
          %h4= req.name
          - unless @report
            = link_to 'Add entry', new_graduation_mapping_path(@student, req.id), :class=>'new'
          - unless req.notes.blank?
            .notes.textile=textilize(req.notes)
          .mappings
            - if @report && @assigned[req.id][:mappings].empty?
              No entries.
            = render :partial => 'general_mapping', :collection => @assigned[req.id][:mappings]

  - unless @service_requirements.empty?
    %h2 Service Requirements
    #service.container
      - @service_requirements.each_with_index do |req,i|
        - klass=%w{req general}
        - klass << 'first' if i==0
        %div{:class=>klass.join(' '), :id => "req_#{req.id}"}
          %h3
            .subtotal= @assigned[req.id][:subtotal]
            = req.name
          - unless @report
            = link_to 'Add entry', new_graduation_mapping_path(@student, req.id, :type => 'service'), :class=>'new'
          - unless req.notes.blank?
            .notes.textile=textilize(req.notes)
          .mappings
            - if @report && @assigned[req.id][:mappings].empty?
              No entries.
            = render :partial => 'service_mapping', :collection => @assigned[req.id][:mappings]
        