// partial may be passed with an array of notes - otherwise it is provided a parent
// object that has notes associated

- parent_element = notes
- if parent_element.is_a?(Array)
  - notes = parent_element
- elsif options[:notes_hash]
  - notes = options[:notes_hash][parent_element.id] || []
- else
  - notes = parent_element.notes.find(:all, :order => 'updated_at asc')
- klass = 'notes'
- klass << " #{options[:class]}" if options[:class]
- unless (notes.length==0) && options[:editable] == false
  %ul{:class=>klass, :style => options[:style]}
    - if options[:editable] && !parent_element.is_a?(Array)
      %li.add{:id=>"notes_#{parent_element.class}_#{parent_element.id}"}
        = link_to options[:add_title] || 'Add note', create_note_path(:notable_class=>parent_element.class, :notable_id => parent_element.id), :class => 'add_note'
    = render(:partial => 'note/note_item', :collection => notes, :locals => {:editable => options[:editable]})
