- e = status_update
- status_text = String.new(e.status_text)
- status_text << " (#{Enrollment::ROLE_NAMES[e.role]})" if e.role==Enrollment::ROLE_INSTRUCTOR
%div{:class=>e.status_text.downcase}
  - unless !editable || e.finalized_on? || !@privs[:edit]
    %a.show{:href=>'#', :title => 'Update status'}=status_text
    %ul.status_updater.popup{:style=>'display:none'}
      - case e.enrollment_status 
      - when Enrollment::STATUS_PROPOSED
        %li
          %a.approve{:href => update_enrollment_status_path(e, :approve)} Approve
        %li
          %a.drop{:href => update_enrollment_status_path(e, :drop)} Delete
      - when Enrollment::STATUS_CLOSED
        %li
          %a.approve{:href => update_enrollment_status_path(e, :approve)} Re-activate
        - if e.canceled?
          %li
            %a.drop{:href => update_enrollment_status_path(e, :drop)} Delete
      - when Enrollment::STATUS_ENROLLED
        %li
          %a.fulfill{:href => update_enrollment_status_path(e, :fulfill)} Fulfill
        %li
          %a.cancel{:href => update_enrollment_status_path(e, :cancel)} Cancel Enrollment
      - case e.role
      - when Enrollment::ROLE_STUDENT
        %li
          %a.role{:href => update_enrollment_status_path(e, :instructor)} Make instructor
      - when Enrollment::ROLE_INSTRUCTOR
        %li
          %a.role{:href => update_enrollment_status_path(e, :student)} Make student
      %li
        %a.hide{:href => '#', :title => 'Keep the same'} X
  - else
    = status_text